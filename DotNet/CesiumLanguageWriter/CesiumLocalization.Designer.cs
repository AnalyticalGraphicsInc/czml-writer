//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.544
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CesiumLanguageWriter {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CesiumLocalization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CesiumLocalization() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CesiumLanguageWriter.CesiumLocalization", typeof(CesiumLocalization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument is not an expected type for the method..
        /// </summary>
        internal static string ArgumentTypeInvalid {
            get {
                return ResourceManager.GetString("ArgumentTypeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JulianDate cannot represent the moment of a leap second with the UTC time standard..
        /// </summary>
        internal static string CannotRepresentLeapSecondAsUTCJulianDate {
            get {
                return ResourceManager.GetString("CannotRepresentLeapSecondAsUTCJulianDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Day of Year must be between 1 and 366 inclusive..
        /// </summary>
        internal static string DayOfYearOutOfRange {
            get {
                return ResourceManager.GetString("DayOfYearOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid format string..
        /// </summary>
        internal static string GregorianDateFormatInvalid {
            get {
                return ResourceManager.GetString("GregorianDateFormatInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid character {0} in format specifier..
        /// </summary>
        internal static string GregorianDateInvalidCharacter {
            get {
                return ResourceManager.GetString("GregorianDateInvalidCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid character {0} at the end of the format specifier..
        /// </summary>
        internal static string GregorianDateInvalidCharacterAtEnd {
            get {
                return ResourceManager.GetString("GregorianDateInvalidCharacterAtEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not one of the format specifier characters defined for DateTimeFormatInfo..
        /// </summary>
        internal static string GregorianDateInvalidFormatSpecifier {
            get {
                return ResourceManager.GetString("GregorianDateInvalidFormatSpecifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Order of month and date is not defined by {0}..
        /// </summary>
        internal static string GregorianDateOrderOfMonthAndDateNotDefined {
            get {
                return ResourceManager.GetString("GregorianDateOrderOfMonthAndDateNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Order of year, month and date is not defined by {0}..
        /// </summary>
        internal static string GregorianDateOrderOfYearMonthAndDateNotDefined {
            get {
                return ResourceManager.GetString("GregorianDateOrderOfYearMonthAndDateNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Order of year, month and date defined by {0} is not supported..
        /// </summary>
        internal static string GregorianDateOrderOfYearMonthAndDateNotSupported {
            get {
                return ResourceManager.GetString("GregorianDateOrderOfYearMonthAndDateNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A quote was not terminated..
        /// </summary>
        internal static string GregorianDateQuoteNotTerminated {
            get {
                return ResourceManager.GetString("GregorianDateQuoteNotTerminated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input {0} was not recognized as a valid GregorianDate..
        /// </summary>
        internal static string GregorianDateStringNotRecognized {
            get {
                return ResourceManager.GetString("GregorianDateStringNotRecognized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more of the hour, minute, and second arguments is outside of the acceptable range..
        /// </summary>
        internal static string HourMinuteSecondInvalidArgument {
            get {
                return ResourceManager.GetString("HourMinuteSecondInvalidArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The magnitude of the provided coordinates must not be infinite..
        /// </summary>
        internal static string MagnitudeMustNotBeInfinite {
            get {
                return ResourceManager.GetString("MagnitudeMustNotBeInfinite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The magnitude of the provided coordinates must not be zero..
        /// </summary>
        internal static string MagnitudeMustNotBeZero {
            get {
                return ResourceManager.GetString("MagnitudeMustNotBeZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This collection must have the same number of elements as the &quot;dates&quot; collection..
        /// </summary>
        internal static string MismatchedNumberOfDatesAndValues {
            get {
                return ResourceManager.GetString("MismatchedNumberOfDatesAndValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object of the type {0} must be constructed from an array with at least {1} elements..
        /// </summary>
        internal static string MustBeConstructedFromSpecificNumberOfElements {
            get {
                return ResourceManager.GetString("MustBeConstructedFromSpecificNumberOfElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TAI.
        /// </summary>
        internal static string TaiAbbreviation {
            get {
                return ResourceManager.GetString("TaiAbbreviation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to International Atomic Time.
        /// </summary>
        internal static string TaiName {
            get {
                return ResourceManager.GetString("TaiName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The enumeration has an invalid or unsupported value..
        /// </summary>
        internal static string UnknownEnumerationValue {
            get {
                return ResourceManager.GetString("UnknownEnumerationValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UTC.
        /// </summary>
        internal static string UtcAbbreviation {
            get {
                return ResourceManager.GetString("UtcAbbreviation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Coordinated Universal Time.
        /// </summary>
        internal static string UtcName {
            get {
                return ResourceManager.GetString("UtcName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Cesium writer cannot be closed because it is not open..
        /// </summary>
        internal static string WriterAlreadyClosed {
            get {
                return ResourceManager.GetString("WriterAlreadyClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Cesium writer cannot be opened because it is already opened.  Please close the previous element before opening a new one..
        /// </summary>
        internal static string WriterAlreadyOpen {
            get {
                return ResourceManager.GetString("WriterAlreadyOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Cesium writer cannot be used to write elements because it is not currently open.  This usually indicates an attempt to use a writer after is has been closed..
        /// </summary>
        internal static string WriterNotOpen {
            get {
                return ResourceManager.GetString("WriterNotOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more of the year, month, and day arguments is outside of the acceptable range..
        /// </summary>
        internal static string YearMonthDayInvalidArgument {
            get {
                return ResourceManager.GetString("YearMonthDayInvalidArgument", resourceCulture);
            }
        }
    }
}
