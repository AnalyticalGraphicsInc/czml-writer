// <auto-generated>
// This file was generated automatically by GenerateFromSchema. Do NOT edit it.
// https://github.com/AnalyticalGraphicsInc/czml-writer
// </auto-generated>

using CesiumLanguageWriter.Advanced;
using System;
using JetBrains.Annotations;
using System.Collections.Generic;

namespace CesiumLanguageWriter
{
    /// <summary>
    /// Writes a <c>Shape</c> to a <see cref="CesiumOutputStream"/>. A <c>Shape</c> is a list of two-dimensional positions defining a shape.
    /// </summary>
    public class ShapeCesiumWriter : CesiumPropertyWriter<ShapeCesiumWriter>, ICesiumDeletablePropertyWriter, ICesiumCartesian2ListValuePropertyWriter
    {
        /// <summary>
        /// The name of the <c>cartesian2</c> property.
        /// </summary>
        [NotNull]
        public const string Cartesian2PropertyName = "cartesian2";

        /// <summary>
        /// The name of the <c>delete</c> property.
        /// </summary>
        [NotNull]
        public const string DeletePropertyName = "delete";

        [NotNull]
        [CSToJavaFinalField]
        private readonly Lazy<CesiumCartesian2ListValuePropertyAdaptor<ShapeCesiumWriter>> m_asCartesian2;

        /// <summary>
        /// Initializes a new instance.
        /// </summary>
        /// <param name="propertyName">The name of the property.</param>
        public ShapeCesiumWriter([NotNull] string propertyName)
            : base(propertyName)
        {
            m_asCartesian2 = CreateAsCartesian2();
        }

        /// <summary>
        /// Initializes a new instance as a copy of an existing instance.
        /// </summary>
        /// <param name="existingInstance">The existing instance to copy.</param>
        protected ShapeCesiumWriter([NotNull] ShapeCesiumWriter existingInstance)
            : base(existingInstance)
        {
            m_asCartesian2 = CreateAsCartesian2();
        }

        /// <inheritdoc/>
        public override ShapeCesiumWriter Clone()
        {
            return new ShapeCesiumWriter(this);
        }

        /// <summary>
        /// Writes the value expressed as a <c>cartesian2</c>, which is the list of positions specified as two-dimensional Cartesian values <c>[X, Y, X, Y, ...]</c>.
        /// </summary>
        /// <param name="values">The values.</param>
        public void WriteCartesian2(IEnumerable<Rectangular> values)
        {
            const string PropertyName = Cartesian2PropertyName;
            OpenIntervalIfNecessary();
            Output.WritePropertyName(PropertyName);
            CesiumWritingHelper.WriteCartesian2List(Output, values);
        }

        /// <summary>
        /// Writes the value expressed as a <c>delete</c>, which is whether the client should delete existing samples or interval data for this property. Data will be deleted for the containing interval, or if there is no containing interval, then all data. If true, all other properties in this property will be ignored.
        /// </summary>
        /// <param name="value">The value.</param>
        public void WriteDelete(bool value)
        {
            const string PropertyName = DeletePropertyName;
            OpenIntervalIfNecessary();
            Output.WritePropertyName(PropertyName);
            Output.WriteValue(value);
        }

        /// <summary>
        /// Returns a wrapper for this instance that implements <see cref="ICesiumCartesian2ListValuePropertyWriter"/>. Because the returned instance is a wrapper for this instance, you may call <see cref="ICesiumElementWriter.Close"/> on either this instance or the wrapper, but you must not call it on both.
        /// </summary>
        /// <returns>The wrapper.</returns>
        [NotNull]
        public CesiumCartesian2ListValuePropertyAdaptor<ShapeCesiumWriter> AsCartesian2()
        {
            return m_asCartesian2.Value;
        }

        [NotNull]
        private Lazy<CesiumCartesian2ListValuePropertyAdaptor<ShapeCesiumWriter>> CreateAsCartesian2()
        {
            return new Lazy<CesiumCartesian2ListValuePropertyAdaptor<ShapeCesiumWriter>>(CreateCartesian2List, false);
        }

        [NotNull]
        private CesiumCartesian2ListValuePropertyAdaptor<ShapeCesiumWriter> CreateCartesian2List()
        {
            return CesiumValuePropertyAdaptors.CreateCartesian2List(this);
        }

    }
}
