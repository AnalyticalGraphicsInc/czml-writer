{
    "namespace": "CesiumLanguageWriter",
    "access": "public",
    "types": {
        "TimeIntervalCollection": [
            {
                "parameters": [
                    {
                        "type": "TimeInterval",
                        "name": "value",
                        "description": "The interval."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteTimeInterval(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "JulianDate",
                        "name": "start",
                        "description": "The earliest date of the interval."
                    },
                    {
                        "type": "JulianDate",
                        "name": "stop",
                        "description": "The latest date of the interval."
                    }
                ],
                "callOverload": "new TimeInterval(start, stop)"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<TimeInterval>",
                        "name": "value",
                        "description": "The intervals."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteTimeIntervalCollection(Output, value);"
            }
        ],
        "TimeInterval": [
            {
                "parameters": [
                    {
                        "type": "TimeInterval",
                        "name": "value",
                        "description": "The interval."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteTimeInterval(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "JulianDate",
                        "name": "start",
                        "description": "The earliest date of the interval."
                    },
                    {
                        "type": "JulianDate",
                        "name": "stop",
                        "description": "The latest date of the interval."
                    }
                ],
                "callOverload": "new TimeInterval(start, stop)"
            }
        ],
        "Time": [
            {
                "parameters": [
                    {
                        "type": "JulianDate",
                        "name": "value",
                        "description": "The time."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteDate(Output, value);"
            }
        ],
        "Cartesian2": [
            {
                "parameters": [
                    {
                        "type": "Rectangular",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartesian2(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "double",
                        "name": "x",
                        "description": "The X component."
                    },
                    {
                        "type": "double",
                        "name": "y",
                        "description": "The Y component."
                    }
                ],
                "callOverload": "new Rectangular(x, y)"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Rectangular>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Rectangular>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteCartesian2(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "CartographicRectangleRadians": [
            {
                "parameters": [
                    {
                        "type": "CartographicExtent",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartographicExtent(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "double",
                        "name": "west",
                        "description": "The westernmost longitude."
                    },
                    {
                        "type": "double",
                        "name": "south",
                        "description": "The southernmost latitude."
                    },
                    {
                        "type": "double",
                        "name": "east",
                        "description": "The easternmost longitude."
                    },
                    {
                        "type": "double",
                        "name": "north",
                        "description": "The northernmost latitude."
                    }
                ],
                "callOverload": "new CartographicExtent(west, south, east, north)"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<CartographicExtent>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<CartographicExtent>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteCartographicExtent(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "CartographicRectangleDegrees": [
            {
                "parameters": [
                    {
                        "type": "CartographicExtent",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartographicExtent(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "double",
                        "name": "west",
                        "description": "The westernmost longitude."
                    },
                    {
                        "type": "double",
                        "name": "south",
                        "description": "The southernmost latitude."
                    },
                    {
                        "type": "double",
                        "name": "east",
                        "description": "The easternmost longitude."
                    },
                    {
                        "type": "double",
                        "name": "north",
                        "description": "The northernmost latitude."
                    }
                ],
                "callOverload": "new CartographicExtent(west, south, east, north)"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<CartographicExtent>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<CartographicExtent>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteCartographicExtent(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "Cartesian3": [
            {
                "parameters": [
                    {
                        "type": "Cartesian",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartesian3(Output, value);"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Cartesian>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Cartesian>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteCartesian3(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "UnitCartesian3": [
            {
                "parameters": [
                    {
                        "type": "UnitCartesian",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteUnitCartesian3(Output, value);"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<UnitCartesian>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<UnitCartesian>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteUnitCartesian3(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "Cartesian3Velocity": [
            {
                "parameters": [
                    {
                        "type": "Motion<Cartesian>",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartesian3Velocity(Output, value);"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Motion<Cartesian>>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Motion<Cartesian>>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteCartesian3Velocity(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "UnitSpherical": [
            {
                "parameters": [
                    {
                        "type": "UnitSpherical",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteUnitSpherical(Output, value);"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<UnitSpherical>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<UnitSpherical>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteUnitSpherical(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "DoubleList": [
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IEnumerable<double>",
                        "name": "values",
                        "description": "The values."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteDoubleList(Output, values);"
            }
        ],
        "Cartesian2List": [
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IEnumerable<Rectangular>",
                        "name": "values",
                        "description": "The values."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartesian2List(Output, values);"
            }
        ],
        "Cartesian3List": [
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IEnumerable<Cartesian>",
                        "name": "values",
                        "description": "The values."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartesian3List(Output, values);"
            }
        ],
        "Cartesian3ListOfLists": [
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "attributes": [ "CSToJavaUseWildcardGenerics" ],
                        "type": "IEnumerable<IEnumerable<Cartesian>>",
                        "name": "values",
                        "description": "The values."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartesian3ListOfLists(Output, values);"
            }
        ],
        "UnitCartesian3List": [
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IEnumerable<UnitCartesian>",
                        "name": "values",
                        "description": "The values."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteUnitCartesian3List(Output, values);"
            }
        ],
        "SphericalList": [
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IEnumerable<Spherical>",
                        "name": "values",
                        "description": "The values."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteSphericalList(Output, values);"
            }
        ],
        "UnitSphericalList": [
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IEnumerable<UnitSpherical>",
                        "name": "values",
                        "description": "The values."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteUnitSphericalList(Output, values);"
            }
        ],
        "CartographicRadians": [
            {
                "parameters": [
                    {
                        "type": "Cartographic",
                        "name": "value",
                        "description": "The interval."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartographic(Output, value);"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Cartographic>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Cartographic>",
                        "name": "values",
                        "description": "The position corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteCartographic(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "CartographicDegrees": [
            {
                "parameters": [
                    {
                        "type": "Cartographic",
                        "name": "value",
                        "description": "The interval."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartographic(Output, value);"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Cartographic>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Cartographic>",
                        "name": "values",
                        "description": "The position corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteCartographic(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "CartographicRadiansList": [
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IEnumerable<Cartographic>",
                        "name": "values",
                        "description": "The values."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartographicList(Output, values);"
            }
        ],
        "CartographicRadiansListOfLists": [
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "attributes": [ "CSToJavaUseWildcardGenerics" ],
                        "type": "IEnumerable<IEnumerable<Cartographic>>",
                        "name": "values",
                        "description": "The values."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartographicListOfLists(Output, values);"
            }
        ],
        "CartographicDegreesList": [
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IEnumerable<Cartographic>",
                        "name": "values",
                        "description": "The values."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartographicList(Output, values);"
            }
        ],
        "CartographicDegreesListOfLists": [
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "attributes": [ "CSToJavaUseWildcardGenerics" ],
                        "type": "IEnumerable<IEnumerable<Cartographic>>",
                        "name": "values",
                        "description": "The values."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteCartographicListOfLists(Output, values);"
            }
        ],
        "Uri": [
            {
                "parameters": [
                    {
                        "type": "CesiumResource",
                        "name": "resource",
                        "description": "A resource object describing external data."
                    }
                ],
                "callOverload": "resource.Uri, resource.Behavior"
            },
            {
                "usingNamespaces": [ "System" ],
                "parameters": [
                    {
                        "type": "Uri",
                        "name": "uri",
                        "description": "The URI of the data."
                    },
                    {
                        "type": "CesiumResourceBehavior",
                        "name": "resourceBehavior",
                        "description": "An enumeration describing how to include the URI in the document. For even more control, use the overload that takes a ICesiumUriResolver."
                    }
                ],
                "callOverload": "uri.ToString(), resourceBehavior"
            },
            {
                "usingNamespaces": [ "System" ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "uri",
                        "description": "The URI of the data."
                    },
                    {
                        "type": "CesiumResourceBehavior",
                        "name": "resourceBehavior",
                        "description": "An enumeration describing how to include the URI in the document. For even more control, use the overload that takes a ICesiumUriResolver."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.GetResourceUri(uri, resourceBehavior));",
                "needsInterval": false
            },
            {
                "usingNamespaces": [ "System" ],
                "parameters": [
                    {
                        "type": "Uri",
                        "name": "uri",
                        "description": "The URI of the data. The provided ICesiumUriResolver will be used to build the final URI embedded in the document."
                    },
                    {
                        "type": "ICesiumUriResolver",
                        "name": "resolver",
                        "description": "An ICesiumUriResolver used to build the final URI that will be embedded in the document."
                    }
                ],
                "callOverload": "uri.ToString(), resolver"
            },
            {
                "usingNamespaces": [ "System" ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "uri",
                        "description": "The URI of the data. The provided ICesiumUriResolver will be used to build the final URI embedded in the document."
                    },
                    {
                        "type": "ICesiumUriResolver",
                        "name": "resolver",
                        "description": "An ICesiumUriResolver used to build the final URI that will be embedded in the document."
                    }
                ],
                "writeValue": "Output.WriteValue(resolver.ResolveUri(uri));",
                "needsInterval": false
            },
            {
                "usingNamespaces": [ "System.Drawing" ],
                "parameters": [
                    {

                        "type": "Image",
                        "name": "image",
                        "description": "The image. A data URI will be created for this image, using PNG encoding."
                    }
                ],
                "callOverload": "image, CesiumImageFormat.Png"
            },
            {
                "usingNamespaces": [ "System.Drawing" ],
                "parameters": [
                    {

                        "type": "Image",
                        "name": "image",
                        "description": "The image. A data URI will be created for this image."
                    },
                    {

                        "type": "CesiumImageFormat",
                        "name": "imageFormat",
                        "description": "The image format to use to encode the image in the data URI."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.ImageToDataUri(image, imageFormat));",
                "needsInterval": false
            }
        ],
        "StripeOrientation": [
            {
                "parameters": [
                    {
                        "type": "CesiumStripeOrientation",
                        "name": "value",
                        "description": "The orientation."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.StripeOrientationToString(value));",
                "needsInterval": false
            }
        ],
        "HorizontalOrigin": [
            {
                "parameters": [
                    {
                        "type": "CesiumHorizontalOrigin",
                        "name": "value",
                        "description": "The horizontal origin."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.HorizontalOriginToString(value));",
                "needsInterval": false
            }
        ],
        "VerticalOrigin": [
            {
                "parameters": [
                    {
                        "type": "CesiumVerticalOrigin",
                        "name": "value",
                        "description": "The vertical origin."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.VerticalOriginToString(value));",
                "needsInterval": false
            }
        ],
        "HeightReference": [
            {
                "parameters": [
                    {
                        "type": "CesiumHeightReference",
                        "name": "value",
                        "description": "The height reference."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.HeightReferenceToString(value));",
                "needsInterval": false
            }
        ],
        "ClockRange": [
            {
                "parameters": [
                    {
                        "type": "ClockRange",
                        "name": "value",
                        "description": "The clock range."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.ClockRangeToString(value));",
                "needsInterval": false
            }
        ],
        "ClockStep": [
            {
                "parameters": [
                    {
                        "type": "ClockStep",
                        "name": "value",
                        "description": "The clock step."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.ClockStepToString(value));",
                "needsInterval": false
            }
        ],
        "LabelStyle": [
            {
                "parameters": [
                    {
                        "type": "CesiumLabelStyle",
                        "name": "value",
                        "description": "The label style."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.LabelStyleToString(value));",
                "needsInterval": false
            }
        ],
        "ArcType": [
            {
                "parameters": [
                    {
                        "type": "CesiumArcType",
                        "name": "value",
                        "description": "The type of an arc."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.ArcTypeToString(value));",
                "needsInterval": false
            }
        ],
        "CornerType": [
            {
                "parameters": [
                    {
                        "type": "CesiumCornerType",
                        "name": "value",
                        "description": "The style of a corner."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.CornerTypeToString(value));",
                "needsInterval": false
            }
        ],
        "ClassificationType": [
            {
                "parameters": [
                    {
                        "type": "CesiumClassificationType",
                        "name": "value",
                        "description": "The classification type."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.ClassificationTypeToString(value));",
                "needsInterval": false
            }
        ],
        "ColorBlendMode": [
            {
                "parameters": [
                    {
                        "type": "CesiumColorBlendMode",
                        "name": "value",
                        "description": "The blend mode."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.ColorBlendModeToString(value));",
                "needsInterval": false
            }
        ],
        "ShadowMode": [
            {
                "parameters": [
                    {
                        "type": "CesiumShadowMode",
                        "name": "value",
                        "description": "The shadow mode."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.ShadowModeToString(value));",
                "needsInterval": false
            }
        ],
        "SensorVolumePortionToDisplay": [
            {
                "parameters": [
                    {
                        "type": "CesiumSensorVolumePortionToDisplay",
                        "name": "value",
                        "description": "The portion of the sensor to display."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.SensorVolumePortionToDisplayToString(value));",
                "needsInterval": false
            }
        ],
        "Double": [
            {
                "parameters": [
                    {
                        "type": "double",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "Output.WriteValue(value);",
                "needsInterval": false
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<double>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<double>",
                        "name": "values",
                        "description": "The value corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteDouble(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "Integer": [
            {
                "parameters": [
                    {
                        "type": "int",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "Output.WriteValue(value);",
                "needsInterval": false
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<int>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<int>",
                        "name": "values",
                        "description": "The value corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteInteger(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "Boolean": [
            {
                "parameters": [
                    {
                        "type": "bool",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "Output.WriteValue(value);",
                "needsInterval": false
            }
        ],
        "Rgba": [
            {
                "usingNamespaces": [ "System.Drawing" ],
                "parameters": [
                    {
                        "type": "Color",
                        "name": "color",
                        "description": "The color."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteRgba(Output, color);"
            },
            {
                "parameters": [
                    {
                        "type": "int",
                        "name": "red",
                        "description": "The red component in the range 0 to 255."
                    },
                    {
                        "type": "int",
                        "name": "green",
                        "description": "The green component in the range 0 to 255."
                    },
                    {
                        "type": "int",
                        "name": "blue",
                        "description": "The blue component in the range 0 to 255."
                    },
                    {
                        "type": "int",
                        "name": "alpha",
                        "description": "The alpha component in the range 0 to 255."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteRgba(Output, red, green, blue, alpha);"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Color>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic", "System.Drawing" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Color>",
                        "name": "colors",
                        "description": "The color corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteRgba(Output, PropertyName, dates, colors, startIndex, length);"
            }
        ],
        "Rgbaf": [
            {
                "usingNamespaces": [ "System.Drawing" ],
                "parameters": [
                    {
                        "type": "Color",
                        "name": "color",
                        "description": "The color."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteRgbaf(Output, color);"
            },
            {
                "parameters": [
                    {
                        "type": "float",
                        "name": "red",
                        "description": "The red component in the range 0 to 1.0."
                    },
                    {
                        "type": "float",
                        "name": "green",
                        "description": "The green component in the range 0 to 1.0."
                    },
                    {
                        "type": "float",
                        "name": "blue",
                        "description": "The blue component in the range 0 to 1.0."
                    },
                    {
                        "type": "float",
                        "name": "alpha",
                        "description": "The alpha component in the range 0 to 1.0."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteRgbaf(Output, red, green, blue, alpha);"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Color>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic", "System.Drawing" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Color>",
                        "name": "colors",
                        "description": "The color corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteRgbaf(Output, PropertyName, dates, colors, startIndex, length);"
            }
        ],
        "UnitQuaternion": [
            {
                "parameters": [
                    {
                        "type": "UnitQuaternion",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteUnitQuaternion(Output, value);"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<UnitQuaternion>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<UnitQuaternion>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteUnitQuaternion(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "Reference": [
            {
                "parameters": [
                    {
                        "type": "Reference",
                        "name": "value",
                        "description": "The reference."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteReference(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "string",
                        "name": "value",
                        "description": "The reference."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteReference(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "string",
                        "name": "identifier",
                        "description": "The identifier of the object which contains the referenced property."
                    },
                    {
                        "type": "string",
                        "name": "propertyName",
                        "description": "The property on the referenced object."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteReference(Output, identifier, propertyName);"
            },
            {
                "parameters": [
                    {
                        "type": "string",
                        "name": "identifier",
                        "description": "The identifier of the object which contains the referenced property."
                    },
                    {
                        "type": "string[]",
                        "name": "propertyNames",
                        "description": "The hierarchy of properties to be indexed on the referenced object."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteReference(Output, identifier, propertyNames);"
            }
        ],
        "VelocityReference": [
            {
                "parameters": [
                    {
                        "type": "Reference",
                        "name": "value",
                        "description": "The reference."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteReference(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "string",
                        "name": "value",
                        "description": "The reference."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteReference(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "string",
                        "name": "identifier",
                        "description": "The identifier of the object which contains the referenced property."
                    },
                    {
                        "type": "string",
                        "name": "propertyName",
                        "description": "The property on the referenced object."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteReference(Output, identifier, propertyName);"
            },
            {
                "parameters": [
                    {
                        "type": "string",
                        "name": "identifier",
                        "description": "The identifier of the object which contains the referenced property."
                    },
                    {
                        "type": "string[]",
                        "name": "propertyNames",
                        "description": "The hierarchy of properties to be indexed on the referenced object."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteReference(Output, identifier, propertyNames);"
            }
        ],
        "ReferenceList": [
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IEnumerable<Reference>",
                        "name": "references",
                        "description": "The list of references."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteReferences(Output, references);"
            }
        ],
        "ReferenceListOfLists": [
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "attributes": [ "CSToJavaUseWildcardGenerics" ],
                        "type": "IEnumerable<IEnumerable<Reference>>",
                        "name": "references",
                        "description": "The list of lists of references."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteReferenceListOfLists(Output, references);"
            }
        ],
        "String": [
            {
                "parameters": [
                    {
                        "type": "string",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "Output.WriteValue(value);",
                "needsInterval": false
            }
        ],
        "Font": [
            {
                "parameters": [
                    {
                        "type": "string",
                        "name": "font",
                        "description": "The font."
                    }
                ],
                "writeValue": "Output.WriteValue(font);",
                "needsInterval": false
            }
        ],
        "Spherical": [
            {
                "parameters": [
                    {
                        "type": "Spherical",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteSpherical(Output, value);"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Spherical>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Spherical>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteSpherical(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "BoundingRectangle": [
            {
                "parameters": [
                    {
                        "type": "BoundingRectangle",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteBoundingRectangle(Output, value);"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<BoundingRectangle>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<BoundingRectangle>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteBoundingRectangle(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "NearFarScalar": [
            {
                "parameters": [
                    {
                        "type": "NearFarScalar",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteNearFarScalar(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "double",
                        "name": "nearDistance",
                        "description": "The lower bound of the camera distance range."
                    },
                    {
                        "type": "double",
                        "name": "nearValue",
                        "description": "The value to use at the lower bound of the camera distance range."
                    },
                    {
                        "type": "double",
                        "name": "farDistance",
                        "description": "The upper bound of the camera distance range."
                    },
                    {
                        "type": "double",
                        "name": "farValue",
                        "description": "The value to use at the upper bound of the camera distance range."
                    }
                ],
                "callOverload": "new NearFarScalar(nearDistance, nearValue, farDistance, farValue)"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<NearFarScalar>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<NearFarScalar>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteNearFarScalar(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "DistanceDisplayCondition": [
            {
                "parameters": [
                    {
                        "type": "Bounds",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteBounds(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "double",
                        "name": "lowerBound",
                        "description": "The lower bound."
                    },
                    {
                        "type": "double",
                        "name": "upperBound",
                        "description": "The upper bound."
                    }
                ],
                "callOverload": "new Bounds(lowerBound, upperBound)"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Bounds>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "usingNamespaces": [ "System.Collections.Generic" ],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<Bounds>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to write."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to write."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteBounds(Output, PropertyName, dates, values, startIndex, length);"
            }
        ]
    }
}