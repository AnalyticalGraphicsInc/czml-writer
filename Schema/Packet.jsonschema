{
    "title": "Packet",
    "description": "Describes the graphical properties of a single object in a scene, such as a single aircraft.",
    "type": "object",
    "properties": {
        "id": {
            "description": "The ID of the object described by this packet.  IDs do not need to be GUIDs, but they do need to uniquely identify a single object within a CZML source and any other CZML sources loaded into the same scope.  If this property is not specified, the client will automatically generate a unique one.  However, this prevents later packets from referring to this object in order to, for example, add more data to it.",
            "type": "string",
            "default": "unique"
        },
        "name": {
            "description": "The name of the object.  It does not have to be unique and is intended for user consumption.",
            "type": "string"
        },
        "parent": {
            "description": "The ID of the parent object or folder.",
            "type": "string"
        },
        "description": {
            "$ref": "String.jsonschema",
            "description": "An HTML description of the object."
        },
        "availability": {
            "$ref": "TimeIntervalCollectionValue.jsonschema",
            "description": "When data for an object is available. If data for an object is known to be available at the current animation time, but the client does not yet have that data (presumably because it will arrive in a later packet), the client will pause with a message like \"Buffering...\" while it waits to receive the data. The property can be a single string specifying a single interval, or an array of strings representing intervals.  A later Cesium packet can update this availability if it changes or is found to be incorrect. For example, an SGP4 propagator may report availability for all time, but then later the propagator throws an exception and the availability needs to be adjusted. If this optional property is not present, the object is assumed to be available for all time. Availability is scoped to a particular CZML stream, so two different streams can list different availability for a single object. Within a single stream, the last availability stated for an object is the one in effect and any availabilities in previous packets are ignored. If an object is available at a time, the client expects the object to have at least one property, and it expects all properties that it needs to be defined at that time. If the object doesn't have any properties, or a needed property is defined but not at the animation time, the client will pause animation and wait for more data.",
            "default": "0000-00-00T00:00:00Z/9999-12-31T24:00:00Z"
        },
        "position": {
            "$ref": "Position.jsonschema",
            "description": "The position of the object in the world. The position has no direct visual representation, but it is used to locate billboards, labels, and other primitives attached to the object.",
            "czmlExamples": [
                "examples/SimplePosition.json",
                "examples/TimeVaryingPosition.json"
            ]
        },
        "billboard": {
            "$ref": "Billboard.jsonschema",
            "description": "A billboard, or viewport-aligned image. The billboard is positioned in the scene by the position property. A billboard is sometimes called a marker."
        },
        "orientation": {
            "$ref": "Orientation.jsonschema",
            "description": "The orientation of the object in the world.  The orientation has no direct visual representation, but it is used to orient models, cones, and pyramids attached to the object."
        },
        "point": {
            "$ref": "Point.jsonschema",
            "description": "A point, or viewport-aligned circle.  The point is positioned in the scene by the `position` property."
        },
        "label": {
            "$ref": "Label.jsonschema",
            "description": "A string of text.  The label is positioned in the scene by the `position` property."
        },
        "polyline": {
            "$ref": "Polyline.jsonschema",
            "description": "A polyline, which is a line in the scene composed of multiple segments."
        },
        "path": {
            "$ref": "Path.jsonschema",
            "description": "A path, which is a polyline defined by the motion of an object over time.  The possible vertices of the path are specified by the `position` property."
        },
        "polygon": {
            "$ref": "Polygon.jsonschema",
            "description": "A polygon, which is a closed figure on the surface of the Earth."
        },
        "ellipsoid": {
            "$ref": "Ellipsoid.jsonschema",
            "description": "An ellipsoid, which is a closed quadric surface that is a three dimensional analogue of an ellipse.  The ellipsoid is positioned and oriented using the `position` and `orientation` properties."
        },
        "viewFrom": {
            "$ref": "Cartesian3Value.jsonschema",
            "description": "A suggested camera location when viewing this object.  The property is specified as a Cartesian position in the East (x), North (y), Up (z) reference frame relative to the objects position property."
        },
        "model": {
            "$ref": "Model.jsonschema",
            "description": "A 3D model.  The model is positioned and oriented using the `position` and `orientation` properties."
        },
        "ellipse": {
            "$ref": "Ellipse.jsonschema",
            "description": "An ellipse, which is a closed curve on the surface of the Earth.  The ellipse is positioned using the `position` property."
        },
        "imageryLayer": {
            "$ref": "ImageryLayer.jsonschema",
            "description": "An imagery layer drawn on the terrain surface."
        },
        "clock": {
            "$ref": "Clock.jsonschema",
            "description": "The clock settings for the entire data set. Only valid on the document object."
        },
        "version": {
            "$ref": "StringValue.jsonschema",
            "description": "The CZML version being written. Only valid on the document object."
        },
        "agi_conicSensor": {
            "$ref": "Extensions/AGI/ConicSensor.jsonschema",
            "description": "A conical sensor volume taking into account occlusion of an ellipsoid, i.e., the globe."
        },
        "agi_customPatternSensor": {
            "$ref": "Extensions/AGI/CustomPatternSensor.jsonschema",
            "description": "A custom sensor volume taking into account occlusion of an ellipsoid, i.e., the globe."
        },
        "agi_fan": {
            "$ref": "Extensions/AGI/Fan.jsonschema",
            "description": "Defines a fan, which starts at a point or apex and extends in a specified list of directions from the apex.  Each pair of directions forms a face of the fan extending to the specified radius."
        },
        "agi_rectangularSensor": {
            "$ref": "Extensions/AGI/RectangularSensor.jsonschema",
            "description": "A rectangular pyramid sensor volume taking into account occlusion of an ellipsoid, i.e., the globe."
        },
        "agi_vector": {
            "$ref": "Extensions/AGI/Vector.jsonschema",
            "description": "Defines a graphical vector that originates at the `position` property and extends in the provided direction for the provided length."
        }
    }
}
